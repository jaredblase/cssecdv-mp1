/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Model.Product;
import View.components.Modal;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 * @author beepxD
 */
public class MgmtProduct extends javax.swing.JPanel {
    private final DefaultTableModel tableModel;
    private ShowComponentListener showTableListener;
    private PurchaseListener purchaseListener;
    private AddProductListener addListener;
    private EditProductListener editListener;
    private DeleteProductListener deleteListener;
    private final Modal modal;

    public MgmtProduct() {
        initComponents();
        tableModel = (DefaultTableModel) table.getModel();
        table.getTableHeader().setFont(new java.awt.Font("SansSerif", java.awt.Font.BOLD, 14));

        modal = new Modal(this);

//        UNCOMMENT TO DISABLE BUTTONS
//        purchaseBtn.setVisible(false);
//        addBtn.setVisible(false);
//        editBtn.setVisible(false);
//        deleteBtn.setVisible(false);
    }

    public void clearTableData() {
        tableModel.setRowCount(0);
    }

    public void setTableData(List<Product> products) {
        for (Product product : products) {
            tableModel.addRow(new Object[]{
                    product.getName(),
                    product.getStock(),
                    product.getPrice()
            });
        }
    }

    public String getProductNameAt(int idx) {
        return (String) table.getModel().getValueAt(idx, 0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        final javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();

        table.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Name", "Stock", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.setRowHeight(24);
        table.getTableHeader().setReorderingAllowed(false);
        table.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tableAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(table);
        if (table.getColumnModel().getColumnCount() > 0) {
            table.getColumnModel().getColumn(0).setMinWidth(50);
            table.getColumnModel().getColumn(1).setMaxWidth(100);
            table.getColumnModel().getColumn(2).setMaxWidth(100);
        }

        purchaseBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        purchaseBtn.setText("PURCHASE");
        purchaseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseBtnActionPerformed(evt);
            }
        });

        addBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        addBtn.setText("ADD");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        editBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editBtn.setText("EDIT");
        editBtn.setToolTipText("");
        editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editBtnActionPerformed(evt);
            }
        });

        deleteBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deleteBtn.setText("DELETE");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(purchaseBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(0, 0, 0)
                        .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 222, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(purchaseBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(editBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void purchaseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseBtnActionPerformed
        int rowIdx = table.getSelectedRow();
        if (rowIdx < 0) return;

        final JTextField qtyField = new JTextField("0");
        Modal.design(qtyField, "PRODUCT STOCK");
        modal.setup("PURCHASE PRODUCT", JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);

        var productName = tableModel.getValueAt(rowIdx, 0).toString();
        modal.addMessages("How many " + productName + " do you want to purchase?", qtyField);
        modal.setCallback(() -> {
            if (purchaseListener != null) {
                purchaseListener.onPurchase(rowIdx, qtyField.getText());
            }
        });
        modal.show();
    }//GEN-LAST:event_purchaseBtnActionPerformed

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
        JTextField nameFld = new JTextField();
        JTextField stockFld = new JTextField();
        JTextField priceFld = new JTextField();

        Modal.design(nameFld, "PRODUCT NAME");
        Modal.design(stockFld, "PRODUCT STOCK");
        Modal.design(priceFld, "PRODUCT PRICE");

        modal.setup("ADD PRODUCT", JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
        modal.addMessages("Insert New Product Details:", nameFld, stockFld, priceFld);
        modal.setCallback(() -> {
            if (addListener != null) {
                addListener.onAdd(nameFld.getText(), stockFld.getText(), priceFld.getText());
            }
        });
        modal.show();
    }//GEN-LAST:event_addBtnActionPerformed

    private void editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editBtnActionPerformed
        int rowIdx = table.getSelectedRow();
        if (rowIdx < 0) return;

        JTextField stockFld = new JTextField(tableModel.getValueAt(rowIdx, 1) + "");
        JTextField priceFld = new JTextField(tableModel.getValueAt(rowIdx, 2) + "");

        Modal.design(stockFld, "PRODUCT STOCK");
        Modal.design(priceFld, "PRODUCT PRICE");


        modal.setup("EDIT PRODUCT", JOptionPane.PLAIN_MESSAGE, JOptionPane.OK_CANCEL_OPTION);
        modal.addMessages("Edit product details for " + this.getProductNameAt(rowIdx) + ":", stockFld, priceFld);
        modal.setCallback(() -> {
            if (editListener != null) {
                editListener.onEdit(rowIdx, stockFld.getText(), priceFld.getText());
            }
        });
        modal.show();
    }//GEN-LAST:event_editBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
        int rowIdx = table.getSelectedRow();
        if (rowIdx < 0) return;

        int result = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete " + this.getProductNameAt(rowIdx) + "?", "DELETE PRODUCT", JOptionPane.YES_NO_OPTION);

        if (result == JOptionPane.YES_OPTION && deleteListener != null) {
            deleteListener.onDelete(rowIdx);
        }
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void tableAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tableAncestorAdded
        if (showTableListener != null) {
            showTableListener.onShow();
        }
    }//GEN-LAST:event_tableAncestorAdded

    public void setShowTableListener(ShowComponentListener showTableListener) {
        this.showTableListener = showTableListener;
    }

    public void setErrorMessage(String text) {
        modal.setErrorMessage(text);
    }

    public void closeDialog() {
        modal.hide();
    }

    public void setPurchaseListener(PurchaseListener purchaseListener) {
        this.purchaseListener = purchaseListener;
    }

    public void setAddListener(AddProductListener addListener) {
        this.addListener = addListener;
    }

    public void setEditListener(EditProductListener editListener) {
        this.editListener = editListener;
    }

    public void setDeleteListener(DeleteProductListener deleteListener) {
        this.deleteListener = deleteListener;
    }

    public void setAdminControlVisible(boolean visible) {
        addBtn.setVisible(visible);
        deleteBtn.setVisible(visible);
        editBtn.setVisible(visible);
        purchaseBtn.setVisible(!visible);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private final javax.swing.JButton addBtn = new javax.swing.JButton();
    private final javax.swing.JButton deleteBtn = new javax.swing.JButton();
    private final javax.swing.JButton editBtn = new javax.swing.JButton();
    private final javax.swing.JButton purchaseBtn = new javax.swing.JButton();
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables

    public interface PurchaseListener {
        void onPurchase(int index, String quantity);
    }

    public interface AddProductListener {
        void onAdd(String name, String stock, String price);
    }

    public interface EditProductListener {
        void onEdit(int index, String stock, String price);
    }

    public interface DeleteProductListener {
        void onDelete(int index);
    }
}
